// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

<<<<<<< HEAD
model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]

  Profile Profile?
}

model Profile {
  id     String @id @default(cuid()) @map("_id")
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  gender    String
  firstName String
  lastName  String
  username  String  @unique
  image     String?
}

model VerificationToken {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
=======
model Profile {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  gender         String?
  lastName       String
  userId         String
  username       String        @unique
  birthday    String?
  accountNo String?
  bankName String?
  age Int?
  preferredGiftType String?
  description String?
  occupation String?
  hobbies String[]
  socialLinks String[]
  allowEmailNotifications Boolean @default(false)
  keepIdentityAnon Boolean @default(true)
  WishListItem   WishListItem? @relation(fields: [wishListItemId], references: [id])
  wishListItemId String?       @db.ObjectId
}



model Notification {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  title   String?
  message String

  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Transaction {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  amount         Float
  paidByFullName String
  paidByUserName String
  createdAt      DateTime @default(now())
}

model WishListItem {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  name       String
  price      Float
  image      String?
  link       String
  viewedBy   Profile[]

  createdAt DateTime @default(now())
>>>>>>> 2ec12dd (apis for all major models)
}
